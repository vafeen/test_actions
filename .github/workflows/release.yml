name: Generated APK Release (Upload - Create Artifact To GitHub Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Frogobox ID

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0, v1.1, etc.

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleRelease

      # Read release notes for title and body
      - name: Read Release Notes
        id: read_release_notes
        run: |
          RELEASE_TITLE=$(head -n 1 release_notes.md | sed 's/^# //')  # Remove leading '#'
          RELEASE_BODY=$(tail -n +2 release_notes.md | tr '\n' '\\n')  # Replace newlines with '\n'
          echo "RELEASE_TITLE=${RELEASE_TITLE}" >> $GITHUB_ENV  # Set title in environment variable
          echo "RELEASE_BODY=${RELEASE_BODY}" >> $GITHUB_ENV  # Set body in environment variable

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.RELEASE_TITLE }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure this token has the necessary permissions

      # Upload APK Release to GitHub Release
      - name: Upload APK Release to GitHub Release
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/release/app-release.apk  # Adjust this path if necessary
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive